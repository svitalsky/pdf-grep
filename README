A Python script to search PDF(s) for occurrences of a searched pattern, count them and
open the results in the 'less' text viewer or save them to a file. Expects 'pdftotext'
(and optionally other tools such as 'less' or 'cat') to be present on your system.

```
Usage:
    pdf-grep -h
    pdf-grep [-q] [-i] [-c] [fileN.pdf ...] [dirN ...] [not exclude-mask] [-s {file|-}] <[-p] pattern>

Options and parameters:
    The order of parameters is mostly irrelevant, apart from obvious pairs '[-p] pattern', '-s file'
    and 'not exclude-mask'.
    -h:          print this help and exit.
    -q:          be quiet in case nothing is found ('No hits (in xx ms)' is reported by default)
    -i:          make the search case insensitive; it is case sensitive by default.
    -c:          show clean lines, i.e. do not prepend lines with their respective approximate
                 position in a file; by default each line with a hit is included in results prepended
                 with approximate position, e.g. "(23%) the actual text of the line"
    -p:          optionally specify explicitly that the next argument is a search pattern,
                 e.g. when you need to search for the reserved word 'not' (see bellow).
    -s {file|-}: don't open the results in 'less', rather save them to the file; fails if the file
                 is a regular file and already exists; use '-' to just print the results to
                 the standard output

    fileN.pdf:   file to be searched in, may be repeated.
    dirN:        directory to be searched in (NOT recursively!), may be repeated; in each
                 directory all the PDF files (i.e. having the .pdf suffix — suffix is case
                 insensitive, so the file 'dir/file.PDF' is counted in as well) are included.

    At least one PDF file or a directory containing one must be given!

    not exclude-mask:
                 'not' is a reserved word after which must come exactly one argument 'exclude-mask'
                 It may appear in this capacity once at most, any other occurrence will be treated
                 normally, i.e. as file, directory or search pattern. The 'exclude-mask' means
                 beginning of PDF file names to be excluded from search.
    pattern:     is a search pattern, must occur exactly once, may contain regexp, may be introduced
                 with '-p'.

Examples:
    pdf-grep "my text" file.pdf
        This will search for 'my text' in the 'file.pdf' file.

    pdf-grep "my text" directory/file* -s -
        This will search for 'my text' in whatever (files and/or directories) the shell returns
        as the result of expanding the '*' wildcard in the 'directory/file*' expression. The results
        will be printed to the standard output.

    pdf-grep file.pdf some/directory "reflex[eií]" -i some/other/directory
        This will search for regexp pattern "reflex[eií]" in the file 'file.pdf' (must exist,
        otherwise string 'file.pdf' would be treated as search pattern and the real pattern would be
        considered the second one which would of course cause error exit) and in any PDF found in
        the 'some/directory' or 'some/other/directory' directories (again, both the directories
        must exist for the same reason as above). The search will be case insensitive.

    pdf-grep not/ not not -p not
        This will search for pattern 'not' in PDFs in the directory 'not' (notice the slash at
        the end of the directory name to distinguish it from both pattern and the 'not' reserved
        word), excluding any PDF file the name of which begins with 'not'.

    pdf-grep not mask not some/dir
        This will search for pattern 'not' in PDFs in the 'some/dir' directory, excluding any PDF
        file the name of which begins with 'mask'. Here we didn't need to introduce the 'not' search
        pattern with explicit '-p' because it couldn't get confused with the directory name as in
        the previous example.
```
